syntax = "proto3";
option go_package = ".;proto";

message Login {
  string token = 1;
  string event = 2;
  string tz = 3;
}

message Event {
  int32 id = 1;
  string name = 2;
}

message Player {
  string name = 1;
  string tz = 2;
  repeated Event events = 3;
}

message Timerange {
  int32 id = 1;
  int32 start = 2;
  int32 end = 3;
  string tz = 4;
}

message Timeranges {
  repeated Timerange timeranges = 1;
  string token = 2;
  string event = 3;
}

message Empty {}

service Gateway {
  rpc GetPlayer(Login) returns (Player);
  rpc GetTimeranges(Login) returns (Timeranges);
  rpc PutTimeranges(Timeranges) returns (Timeranges);
  rpc SetTimeranges(Timeranges) returns (Empty);
  rpc DeleteTimeranges(Timeranges) returns (Empty);
}

service Scheduler {
  rpc NotifyUpdated(Event) returns (Empty);
}

message GetMagicTokenRequest {
  string player_dc_id = 1;
}

message GetMagicTokenResponse {
  string magic_token = 1;
}

message EventInfo {
  int32 event_id = 1;
  string event_dc_id = 2;
  string event_name = 3;
  int32 min_players = 4;
  float min_time = 5;
}

message GetEventsResponse {
  repeated EventInfo events = 3;
}

message GetEventPlayersRequest {
  int32 event_id = 1;
}

message GetEventPlayersResponse {
  repeated GetEventPlayersResponsePlayer players = 1;
}

message GetEventPlayersResponsePlayer {
  string player_dc_id = 1;
  repeated Timerange timeranges = 2;
}

message SyncEventPlayerRequest {
  repeated SyncEventPlayerRequestEventPlayers event_players = 2;
}

message SyncEventPlayerRequestEventPlayers {
  string guild_name = 2;
  string channel_id = 3;
  string channel_name = 4;
  string player_id = 5;
  string player_name = 6;
}


service EventDb {
  rpc GetMagicToken(GetMagicTokenRequest) returns (GetMagicTokenResponse);
  rpc GetEvents(Empty) returns (GetEventsResponse);
  rpc GetEventPlayers(GetEventPlayersRequest) returns (GetEventPlayersResponse);
  rpc SyncEventPlayers(SyncEventPlayerRequest) returns (Empty);
}
